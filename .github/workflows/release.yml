name: Release

on:
  push:
    branches:
      - release

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4

      - name: Get app name
        id: name
        run: |
          APP_NAME=$(grep -m1 -oP '(?<=name = ")[^"]*' Cargo.toml)
          echo "APP_NAME=$APP_NAME"
          echo "name=$APP_NAME" >> $GITHUB_OUTPUT

      - name: Get app version
        id: version
        run: |
          APP_VERSION_OUTPUT=$(grep -m1 -oP '(?<=version = ")[^"]*' Cargo.toml)
          echo "version=$APP_VERSION_OUTPUT"
          echo "version=$APP_VERSION_OUTPUT" >> $GITHUB_OUTPUT

      - name: Check if release already exists
        run: |
          curl -sL https://api.github.com/repos/${{ github.repository }}/releases | jq -r '.[] | .tag_name' | grep -q ${{ steps.version.outputs.version }} && echo "Release already exists" && exit 1 || echo "Release does not exist"

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: wasm32-wasip1

      - name: Setup just runner
        uses: extractions/setup-just@v2

      - name: Build release
        run: just release

      - name: Generate SHA256 checksum
        run: |
          cd ./target/wasm32-wasip1/release/
          sha256sum ${{ steps.name.outputs.name }}.wasm > ${{ steps.name.outputs.name }}.wasm.sha256

      - name: Create release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./target/wasm32-wasip1/release/${{ steps.name.outputs.name }}.wasm
            ./target/wasm32-wasip1/release/${{ steps.name.outputs.name }}.wasm.sha256
          name: ${{ steps.version.outputs.version }}
          tag_name: ${{ steps.version.outputs.version }}
          generate_release_notes: true
          draft: false
          # Note: drafts and prereleases cannot be set as latest, setting this to false.
          prerelease: false
          make_latest: true
          fail_on_unmatched_files: true
